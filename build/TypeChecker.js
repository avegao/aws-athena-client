"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class TypeChecker {
    constructor(str) {
        this.str = str;
        this.len = str.length;
    }
    parse() {
        if (this.isArray()) {
            return this.parseStringArray();
        }
        else if (this.isObject()) {
            return this.parseStringObject();
        }
        else if (this.isDate()) {
            return this.parseStringDate();
        }
        else if (this.isNumber()) {
            return this.parseStringNumber();
        }
        else {
            return this.str;
        }
    }
    isNumber() {
        return !isNaN(Number(this.str));
    }
    isArray() {
        return this.str[0] === '[' && this.str[this.len - 1] === ']';
    }
    isObject() {
        return this.str[0] === '{' && this.str[this.len - 1] === '}';
    }
    isDate() {
        return !isNaN(Date.parse(this.str));
    }
    parseStringArray() {
        return JSON.parse(this.str);
    }
    parseStringNumber() {
        return Number(this.str);
    }
    parseStringDate() {
        return new Date(this.str);
    }
    parseStringObject() {
        return JSON.parse(this.str);
    }
}
exports.default = TypeChecker;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9UeXBlQ2hlY2tlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQXFCLFdBQVc7SUFJNUIsWUFBWSxHQUFXO1FBQ25CLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDO0lBQzFCLENBQUM7SUFFTSxLQUFLO1FBQ1IsSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFDaEIsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztTQUNsQzthQUFNLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQ3hCLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7U0FDbkM7YUFBTSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsRUFBRTtZQUN0QixPQUFPLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztTQUNqQzthQUFNLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRSxFQUFFO1lBQ3hCLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7U0FDbkM7YUFBTTtZQUNILE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQztTQUNuQjtJQUNMLENBQUM7SUFFTyxRQUFRO1FBQ1osT0FBTyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVPLE9BQU87UUFDWCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUM7SUFDakUsQ0FBQztJQUVPLFFBQVE7UUFDWixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUM7SUFDakUsQ0FBQztJQUVPLE1BQU07UUFDVixPQUFPLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVPLGdCQUFnQjtRQUNwQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFFTyxpQkFBaUI7UUFDckIsT0FBTyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFTyxlQUFlO1FBQ25CLE9BQU8sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFTyxpQkFBaUI7UUFDckIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNoQyxDQUFDO0NBQ0o7QUF0REQsOEJBc0RDIiwiZmlsZSI6IlR5cGVDaGVja2VyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHlwZUNoZWNrZXIge1xuICAgIHByaXZhdGUgcmVhZG9ubHkgbGVuOiBudW1iZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSBzdHI6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKHN0cjogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuc3RyID0gc3RyO1xuICAgICAgICB0aGlzLmxlbiA9IHN0ci5sZW5ndGg7XG4gICAgfVxuXG4gICAgcHVibGljIHBhcnNlKCk6IGFueSB7XG4gICAgICAgIGlmICh0aGlzLmlzQXJyYXkoKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VTdHJpbmdBcnJheSgpO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuaXNPYmplY3QoKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucGFyc2VTdHJpbmdPYmplY3QoKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmlzRGF0ZSgpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wYXJzZVN0cmluZ0RhdGUoKTtcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLmlzTnVtYmVyKCkpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnBhcnNlU3RyaW5nTnVtYmVyKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5zdHI7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGlzTnVtYmVyKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gIWlzTmFOKE51bWJlcih0aGlzLnN0cikpO1xuICAgIH1cblxuICAgIHByaXZhdGUgaXNBcnJheSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RyWzBdID09PSAnWycgJiYgdGhpcy5zdHJbdGhpcy5sZW4gLSAxXSA9PT0gJ10nO1xuICAgIH1cblxuICAgIHByaXZhdGUgaXNPYmplY3QoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0clswXSA9PT0gJ3snICYmIHRoaXMuc3RyW3RoaXMubGVuIC0gMV0gPT09ICd9JztcbiAgICB9XG5cbiAgICBwcml2YXRlIGlzRGF0ZSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuICFpc05hTihEYXRlLnBhcnNlKHRoaXMuc3RyKSk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBwYXJzZVN0cmluZ0FycmF5KCk6IGFueVtdIHtcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UodGhpcy5zdHIpO1xuICAgIH1cblxuICAgIHByaXZhdGUgcGFyc2VTdHJpbmdOdW1iZXIoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIE51bWJlcih0aGlzLnN0cik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBwYXJzZVN0cmluZ0RhdGUoKTogRGF0ZSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZSh0aGlzLnN0cik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBwYXJzZVN0cmluZ09iamVjdCgpOiBvYmplY3Qge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZSh0aGlzLnN0cik7XG4gICAgfVxufVxuIl19
